<%
# Small helper function to deal with options like dnssec-validation
# that can be "yes", "no", or "auto".
def bool_or_string(val)
  case val
    when TrueClass
      "yes"
    when FalseClass
      "no"
    else
      val.to_s
  end
end -%>
view "<%= @view %>" {
<% unless @match_clients.nil? -%>
	match-clients {
<%   @match_clients.each do |ace| -%>
		<%= ace %>;
<%   end -%>
	};
<% end -%>
<% unless @match_recursive_only.nil? -%>
	match-recursive-only <%= @match_recursive_only ? "yes" : "no" %>;
<% end -%>
<% unless @minimal_responses.nil? -%>
	minimal-responses <%= @minimal_responses ? "yes" : "no" %>;
<% end -%>
<% unless @recursion.nil? -%>
	recursion <%= @recursion ? "yes" : "no" %>;
<% end -%>
<% unless @dnssec_validation.nil? -%>
	dnssec-validation <%= bool_or_string(@dnssec_validation) %>;
<% end -%>
<% unless @notify_.nil? -%>
	notify <%= @notify_ ? "yes" : "no" %>;
<% end -%>
<% if @also_notify -%>
	also-notify {
<%   @also_notify.each do |dest| -%>
		<%= dest %>;
<%   end -%>
	};
<% end -%>
<% if @allow_transfer.length > 0 -%>
	allow-transfer {
<%   @allow_transfer.each do |dest| -%>
		<%= dest %>;
<%   end -%>
	};
<% end -%>
<% unless @extra.nil? -%>
<%   @extra.each_line do |line| -%>
	<%= line -%>
<%   end -%>
<% end -%>
